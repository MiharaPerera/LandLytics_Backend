{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahn\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\GitHub\\\\LandLytics_Backend\\\\Database Integration\\\\src\\\\MainRiskMap\\\\LeafletMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport \"leaflet.locatecontrol\"; // Ensure this is correctly imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeafletMap = () => {\n  _s();\n  useEffect(() => {\n    // Initialize the map\n    const map = L.map(\"map\", {\n      zoomControl: true,\n      maxZoom: 40,\n      minZoom: 3\n    }).setView([7.8731, 80.7718], 8);\n\n    // Base map layers\n    const osmLayer = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: \"© OpenStreetMap contributors\",\n      maxZoom: 19\n    });\n    const googleHybridLayer = L.tileLayer(\"https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}\", {\n      attribution: \"© Google\",\n      maxZoom: 20\n    });\n    const esriWorldTopoLayer = L.tileLayer(\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\", {\n      attribution: \"© ESRI\",\n      maxZoom: 20\n    });\n\n    // WMS Overlay for Sentinel-3 data\n    const copernicusLayer = L.tileLayer.wms(\"https://view.eumetsat.int/geoserver/wms\", {\n      layers: \"copernicus:daily_sentinel3ab_olci_l2_chl_fullres\",\n      format: \"image/png\",\n      transparent: true,\n      opacity: 1\n    });\n\n    // Add default base layer\n    osmLayer.addTo(map);\n\n    // Layer Control\n    const baseLayers = {\n      \"OSM Standard\": osmLayer,\n      \"Google Satellite Hybrid\": googleHybridLayer,\n      \"ESRI World Topo\": esriWorldTopoLayer\n    };\n    const overlayLayers = {\n      \"Copernicus Sentinel-3\": copernicusLayer\n    };\n    L.control.layers(baseLayers, overlayLayers, {\n      collapsed: false\n    }).addTo(map);\n\n    // Locate Control (with timeout to prevent load issues)\n    setTimeout(() => {\n      if (L.Control.Locate) {\n        L.control.locate({\n          locateOptions: {\n            maxZoom: 18\n          }\n        }).addTo(map);\n      } else {\n        console.error(\"Locate control is not available.\");\n      }\n    }, 500);\n\n    // Feature Group for drawn shapes\n    const drawnItems = new L.FeatureGroup();\n    map.addLayer(drawnItems);\n\n    // Add drawing controls\n    const drawControl = new L.Control.Draw({\n      draw: {\n        polygon: true,\n        polyline: false,\n        rectangle: false,\n        circle: false,\n        marker: false,\n        circlemarker: false\n      },\n      edit: {\n        featureGroup: drawnItems\n      }\n    });\n    map.addControl(drawControl);\n\n    // Event listener for drawing\n    map.on(\"draw:created\", e => {\n      const layer = e.layer;\n      drawnItems.addLayer(layer);\n      console.log(\"Polygon coordinates:\", layer.getLatLngs());\n    });\n\n    // Cleanup function\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(LeafletMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LeafletMap;\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","useEffect","L","jsxDEV","_jsxDEV","LeafletMap","_s","map","zoomControl","maxZoom","minZoom","setView","osmLayer","tileLayer","attribution","googleHybridLayer","esriWorldTopoLayer","copernicusLayer","wms","layers","format","transparent","opacity","addTo","baseLayers","overlayLayers","control","collapsed","setTimeout","Control","Locate","locate","locateOptions","console","error","drawnItems","FeatureGroup","addLayer","drawControl","Draw","draw","polygon","polyline","rectangle","circle","marker","circlemarker","edit","featureGroup","addControl","on","e","layer","log","getLatLngs","remove","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shahn/OneDrive/ドキュメント/GitHub/LandLytics_Backend/Database Integration/src/MainRiskMap/LeafletMap.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet-draw/dist/leaflet.draw.css\";\r\nimport \"leaflet-draw\";\r\nimport \"leaflet.locatecontrol\"; // Ensure this is correctly imported\r\n\r\nconst LeafletMap = () => {\r\n  useEffect(() => {\r\n    // Initialize the map\r\n    const map = L.map(\"map\", {\r\n      zoomControl: true,\r\n      maxZoom: 40,\r\n      minZoom: 3\r\n    }).setView([7.8731, 80.7718], 8);\r\n\r\n    // Base map layers\r\n    const osmLayer = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: \"© OpenStreetMap contributors\",\r\n      maxZoom: 19\r\n    });\r\n\r\n    const googleHybridLayer = L.tileLayer(\"https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}\", {\r\n      attribution: \"© Google\",\r\n      maxZoom: 20\r\n    });\r\n\r\n    const esriWorldTopoLayer = L.tileLayer(\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\", {\r\n      attribution: \"© ESRI\",\r\n      maxZoom: 20\r\n    });\r\n\r\n    // WMS Overlay for Sentinel-3 data\r\n    const copernicusLayer = L.tileLayer.wms(\"https://view.eumetsat.int/geoserver/wms\", {\r\n      layers: \"copernicus:daily_sentinel3ab_olci_l2_chl_fullres\",\r\n      format: \"image/png\",\r\n      transparent: true,\r\n      opacity: 1\r\n    });\r\n\r\n    // Add default base layer\r\n    osmLayer.addTo(map);\r\n\r\n    // Layer Control\r\n    const baseLayers = {\r\n      \"OSM Standard\": osmLayer,\r\n      \"Google Satellite Hybrid\": googleHybridLayer,\r\n      \"ESRI World Topo\": esriWorldTopoLayer\r\n    };\r\n\r\n    const overlayLayers = {\r\n      \"Copernicus Sentinel-3\": copernicusLayer\r\n    };\r\n\r\n    L.control.layers(baseLayers, overlayLayers, { collapsed: false }).addTo(map);\r\n\r\n    // Locate Control (with timeout to prevent load issues)\r\n    setTimeout(() => {\r\n      if (L.Control.Locate) {\r\n        L.control.locate({ locateOptions: { maxZoom: 18 } }).addTo(map);\r\n      } else {\r\n        console.error(\"Locate control is not available.\");\r\n      }\r\n    }, 500);\r\n\r\n    // Feature Group for drawn shapes\r\n    const drawnItems = new L.FeatureGroup();\r\n    map.addLayer(drawnItems);\r\n\r\n    // Add drawing controls\r\n    const drawControl = new L.Control.Draw({\r\n      draw: {\r\n        polygon: true,\r\n        polyline: false,\r\n        rectangle: false,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false\r\n      },\r\n      edit: {\r\n        featureGroup: drawnItems\r\n      }\r\n    });\r\n\r\n    map.addControl(drawControl);\r\n\r\n    // Event listener for drawing\r\n    map.on(\"draw:created\", (e) => {\r\n      const layer = e.layer;\r\n      drawnItems.addLayer(layer);\r\n      console.log(\"Polygon coordinates:\", layer.getLatLngs());\r\n    });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      map.remove();\r\n    };\r\n  }, []);\r\n\r\n  return <div id=\"map\" style={{ width: \"100%\", height: \"500px\" }}></div>;\r\n};\r\n\r\nexport default LeafletMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}